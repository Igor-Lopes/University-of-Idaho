# CS270 - System Software
# Igor Lopes oliv7721@vandals.uidaho.edu

# !/bin/bash

	echo "-----------------Script started-----------------"
	if [ $# == 0 ] 	#If the script receives 0 args
	then
		echo "ERROR --No files given as argument !"
		echo "-----------------Script terminated-------------------"
		exit  
	fi	
	
	file1=$1	#Get first file
	tmp_bkp=""	#Will be used to store the name of the temporary directory

	tmp_name=${file1##*/}	#Filters everything but the file's name and extension	
	tmp_name=${tmp_name%.*} #Filters everything from "."
	tmp_path=$(pwd)		#Stores the current path
	tmp_name+='.tmp'	#Appends '.tmp' to the name
	
	if [ -d "$tmp_name" ]   #If the directory already exists
	then
		tmp_bkp=$tmp_name 	#Gets the actual name
		tmp_bkp+="_backup" 	#Adds _backup in order to rename it
		echo "Directory exists it will be moved to $tmp_bkp"		
		mv $tmp_name $tmp_bkp	#Rename current temporary directory
		mkdir "$tmp_name"	#Creates the temporary directory with the name of the file without extension with '.'tmp' appended to it	
	else				#If not exists
		mkdir "$tmp_name"	#Creates the temporary directory with the name of the file without extension with '.'tmp' appended to it

	fi
	
	for i in $*; #"Walk" the array of args
	do
		curr_path="$(dirname -- "$(readlink -f -- "$0")")" #Gets current directory
	
		: '
		   Note: I could not make the operation above to work with "$PWD".
                   It gave the right path but it was glitchy somehow. I got this
		   command from stackexchange, where I could find people with a similar
		   issue.
                   Source of the command:
                   http://unix.stackexchange.com/questions/30446/strange-behavior-in-dirname-readlink-f-0
                '

		curr_file=$tmp_name #Adds the name of the temporary directory to the string that will be the target of cp command
		curr_file+='/'	    #Adds '/'
		curr_file+=$(basename "$i")	#Adds the basename and completes the string
		if [ -e "$curr_file" ]	#If file exists in target directory
		then
			echo "WARNING: File $(basename "$i") already exists in $tmp_name directory. Enter na option:"
			echo "-i --Ignore and overwrite the file"
			echo "-r --Rename and copy the file" 
			echo "-c --Cancel the copy operation for this file"
			read -p "Option:  " option 
			
			case $option in	#Overwrites file
       			"-i" )
				curr_path+='/'
				curr_path+=$tmp_name
				curr_path+='/'
				curr_path+=$(basename "$i")
				if [ -w "$tmp_path" ]	#If user has permission to write in the directory
				then
   					 cp -rf "$i" "$curr_path"
				else
   					echo "Write permission is NOT granted on the target directory!"
					echo "File not copied !"
				fi  	
			;;
        		
			"-r" ) #Renames file to be copied
				curr_path+='/'
                                curr_path+=$tmp_name
                                curr_path+='/'
				read -p "Type the new name for the file:" new_name
				curr_path+=$new_name
				if [ -w "$tmp_path" ]
                                then
                                        cp -i "$i" "$curr_path"
                                else
                                       echo "Write permission is NOT granted on the target directory!"
                                       echo "File not copied !"
                                fi

			;;

			"-c" ) #Cancel operation and skips file
				echo "Copy operation canceled for: $(basename "$i")"
				;;			
			esac
		else	#If file doesn't exist copies it
			curr_path+='/'
                        curr_path+=$tmp_name
                        curr_path+='/'
                        curr_path+=$(basename "$i")
			if [ -w $tmp_path ]
			then
				cp "$i" "$curr_path"	
			fi
		fi

	done

	tar_name=$tmp_name 	#Tar name
	tar_name+='.tar.gz'	#Adds tar.gz
	tar -zcvf "$tar_name" "$tmp_name"	#Creates tar file

	if [ ! "$tmp_bkp" ]	#If string is empty, it means that the backup file exists.
	then
		rm -rf $tmp_name	#Removes temporary directory and all of its contents
	else
		rm -rf $tmp_name	
		mv $tmp_bkp $tmp_name   #Restores the backup directory by renaming it again
	fi	

	echo "-----------------Script terminated-------------------"
